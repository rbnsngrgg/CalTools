<Window x:Class="CalTools_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CalTools_WPF"
        mc:Ignorable="d"
        Title="CalTools" Height="780" Width="1100" MinHeight="640" MinWidth="1000"
        x:Name="CalToolsMainWindow" WindowStyle="SingleBorderWindow" Background="WhiteSmoke"
        Icon="images/CalToolsIcon.ico" AllowDrop="True" Drop="MainWindow_Drop" Closing="CalToolsMainWindow_Closing">
    <Window.Resources>
        <Style TargetType="Image">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <!--Menu bar-->
            <RowDefinition Height="20" MinHeight="20" MaxHeight="20"/>
            <!--Top row buttons-->
            <RowDefinition Height="50" MinHeight="50" MaxHeight="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <!--Menu bar-->
        <DockPanel Grid.Row="0" Visibility="Visible">
            <Menu x:Name="MainMenuBar" DockPanel.Dock="Top" Background="White">
                <MenuItem Header="_File">
                    <MenuItem x:Name="FileMenuExit" Header="Exit" Click="FileMenuExit_Click"/>
                </MenuItem>
                <MenuItem Header="_Tools">
                    <MenuItem x:Name="ToolsMenuExportTsv" Header="Export to TSV" Click="ToolsMenuExportTsv_Click"/>
                </MenuItem>
            </Menu>
        </DockPanel>
        <!--Top row buttons-->
        <DockPanel Grid.Row="1">
            <Button x:Name="CalendarButton" Width="35" Height="35" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Toggle Calendar View" Click="CalendarButton_Click">
                <Image Source="images\calendar.png" Width="30" Height="30"/>
            </Button>
            <Button x:Name="ReceivingFolderButton"  MinWidth="150" MaxWidth="500" Height="20" HorizontalAlignment="Stretch" Margin="15,0,0,0" Content="Receiving Folder" Click="ReceivingFolderButton_Click"/>
            <Button x:Name="CalReportButton"  MinWidth="150" MaxWidth="500" Height="20" HorizontalAlignment="Stretch" Margin="10,0,0,0" Content="Out of Cal Report" Visibility="Collapsed"/>
            <Button x:Name="UpdateButton"  MinWidth="150" MaxWidth="500" Height="20" HorizontalAlignment="Stretch" Margin="10,0,0,0" Content="Update All Items" Click="UpdateButton_Click"/>
            <Button x:Name="CalFolderButton"  MinWidth="150" MaxWidth="500" Height="20" HorizontalAlignment="Stretch" Margin="10,0,0,0" Content="Calibrations Folder" Click="CalFolderButton_Click"/>
            <Button x:Name="SettingsButton"  MinWidth="150" MaxWidth="500" Height="20" HorizontalAlignment="Stretch" Margin="10,0,0,0" Content="Settings" Visibility="Collapsed"/>
            <Separator HorizontalAlignment="Stretch" Background="White"/>
        </DockPanel>
        <!--Main View-->
        <Grid x:Name="MainViewGrid" Visibility="Visible" Grid.Row="2">
            <Grid.RowDefinitions>
                <!--Side buttons, Tree widget, and item details-->
                <RowDefinition Height="*"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="0">
                <!--Side buttons-->
                <StackPanel Width="55" HorizontalAlignment="Left">
                    <Button x:Name="EditItemButton" Width="35" Height="35" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Edit Item" Click="EditItemButton_Click" Visibility="Visible">
                        <Image x:Name="EditButtonImage" Source="images\edit.png" Width="30" Height="30"/>
                    </Button>
                    <Button x:Name="SaveItemButton" Width="35" Height="35" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Save Item" Click="SaveItemButton_Click" Visibility="Collapsed">
                        <Image x:Name="SaveButtonImage"  Source="images\save.png" Width="30" Height="30"/>
                    </Button>
                    <Button x:Name="OpenFolderButton" Width="35" Height="35" HorizontalAlignment="Left" Margin="10,10,0,0" ToolTip="Open Item Folder" Click="OpenFolderButton_Click">
                        <Image Source="images\folder.png"/>
                    </Button>
                    <Button x:Name="NewReportButton" Width="35" Height="35" HorizontalAlignment="Left" Margin="10,10,0,0" ToolTip="Add Data" Click="NewReportButton_Click">
                        <Image Source="images\report.png"/>
                    </Button>
                    <Button x:Name="DeleteItemButton" Width="35" Height="35" HorizontalAlignment="Left" Margin="10,10,0,0" ToolTip="Delete Item" Click="DeleteItemButton_Click">
                        <Image Source="images\delete.png"/>
                    </Button>
                    <Button x:Name="MoveItemButton" Width="35" Height="35" HorizontalAlignment="Left" Margin="10,10,0,0" ToolTip="Move Item" Click="MoveItemButton_Click">
                        <Image Source="images\move.png"/>
                    </Button>
                </StackPanel>
                <GroupBox Header="Items">
                    <TreeView MinWidth="220" VerticalAlignment="Stretch" x:Name="CalibrationItemTree" SelectedItemChanged="CalibrationItemTree_SelectedItemChanged">
                        <TreeView.ContextMenu>
                            <ContextMenu x:Name="TreeViewContextMenu" Opened="TreeViewContextMenu_Opened">
                                <MenuItem x:Name="TreeViewNewItem" Header="New Item" Click="TreeViewNewItem_Click"/>
                                <MenuItem x:Name="TreeViewReplaceItem" Header="Replace Item" Click="TreeViewReplaceItem_Click"/>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                    </TreeView>
                </GroupBox>
                <GroupBox Header="Item Details" HorizontalAlignment="Stretch" MinWidth="650" Width="Auto">
                    <Grid x:Name="DetailsGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition MinWidth="450" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="75"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition x:Name="CalibrationDataRow" Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="SN:" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox x:Name="DetailsSN" IsEnabled="False" Grid.Row="0" Grid.Column="1" Height ="22" Width="Auto"/>
                        <Label Content="Model:" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0"/>
                            <TextBox x:Name="DetailsModel" IsEnabled="False" Grid.Row="1" Grid.Column="1" Height="22" Width="Auto"/>
                        <Label Content="Description:" HorizontalAlignment="Left" Grid.Row="2" Grid.Column="0"/>
                            <TextBox x:Name="DetailsDescription" IsEnabled="False" Grid.Row="2" Grid.Column="1" Height="22" Width="Auto"/>
                        <Label Content="Location:" HorizontalAlignment="Left" Grid.Row="3" Grid.Column="0"/>
                            <ComboBox x:Name="DetailsLocation" IsEnabled="False" IsEditable="True" Grid.Row="3" Grid.Column="1" Height="22" Width="Auto"/>
                        <Label Content="Manufacturer:" HorizontalAlignment="Left" Grid.Row="4" Grid.Column="0"/>
                            <ComboBox x:Name="DetailsManufacturer" IsEnabled="False" IsEditable ="True" Grid.Row="4" Grid.Column="1" Height="22" Width="Auto"/>
                        <Label Content="Standard Equipment:" HorizontalAlignment="Left" Grid.Row="5" Grid.Column="0"/>
                        <CheckBox x:Name="DetailsStandardBox" IsEnabled="False" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="5" Grid.Column="1" Checked="DetailsStandardBox_Checked" Unchecked="DetailsStandardBox_Checked"/>
                        <Label x:Name="DetailsCertificateLabel" Content="Certificate Number:" HorizontalAlignment="Center" Grid.Row="5" Grid.Column="1" Visibility="Collapsed"/>
                        <TextBox x:Name="DetailsCertificateNum" HorizontalAlignment="Right" Grid.Row="5" Height="22" Width="190" Grid.Column="1" IsEnabled="False" Visibility="Collapsed"/>
                        <Label Content="In Operation:" HorizontalAlignment="Left" Grid.Row="6" Grid.Column="0"/>
                            <CheckBox x:Name="DetailsInOperation" IsEnabled="False" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="6" Grid.Column="1"/>
                        <Label Content="Item Group:" HorizontalAlignment="Left" Grid.Row="7" Grid.Column="0"/>
                            <ComboBox x:Name="DetailsItemGroup" IsEnabled="False" IsEditable ="True" Grid.Row="7" Grid.Column="1" Height="22" Width="Auto"/>
                        <Label Content="Remarks:" HorizontalAlignment="Left" Grid.Row="8" Grid.Column="0"/>
                            <TextBox x:Name="DetailsComments" Background="#FFFBFBFB" IsEnabled="False" Grid.Row="8" Grid.Column="1" Margin="0,0,0,5"/>
                        <DataGrid x:Name="DetailsTasksTable" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False"
                                  Grid.Row="9" Grid.Column="0" MinHeight="100" Height="Auto" Visibility="Visible" Grid.ColumnSpan="2" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Task ID" MinWidth="20" Binding="{Binding TaskId}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Title" MinWidth="100" Binding="{Binding TaskTitle, Mode=TwoWay}"/>
                                <DataGridComboBoxColumn Header="Vendor">
                                    <DataGridComboBoxColumn.ElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource" Value="{Binding ServiceVendorList}"/>
                                            <Setter Property="Text" Value="{Binding ServiceVendor, Mode=TwoWay}"/>
                                            <Setter Property="IsEditable" Value="False"/>
                                        </Style>
                                    </DataGridComboBoxColumn.ElementStyle>
                                    <DataGridComboBoxColumn.EditingElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource" Value="{Binding ServiceVendorList}"/>
                                            <Setter Property="Text" Value="{Binding ServiceVendor, Mode=TwoWay}"/>
                                            <Setter Property="IsEditable" Value="True"/>
                                        </Style>
                                    </DataGridComboBoxColumn.EditingElementStyle>
                                </DataGridComboBoxColumn>
                                <DataGridCheckBoxColumn Header="Mandatory" MinWidth="20" Binding="{Binding IsMandatory, Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Interval" MinWidth="20" Binding="{Binding Interval, Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Date" MinWidth="50" Binding="{Binding CompleteDateString, Mode=OneWay}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Due Date" MinWidth="50" Binding="{Binding DueDateString, Mode=OneWay}" IsReadOnly="True"/>
                                <DataGridCheckBoxColumn Header="Due" MinWidth="20" Binding="{Binding IsDue, Mode=OneWay}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Date Override" MinWidth="50" Binding="{Binding DateOverrideString}" IsReadOnly="True"/>
                                <DataGridComboBoxColumn Header="Action" SelectedItemBinding="{Binding ActionType, Mode=TwoWay}">
                                    <DataGridComboBoxColumn.ElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource" Value="{Binding ActionTypes}"/>
                                            <Setter Property="IsEditable" Value="False"/>
                                        </Style>
                                    </DataGridComboBoxColumn.ElementStyle>
                                    <DataGridComboBoxColumn.EditingElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource" Value="{Binding ActionTypes}"/>
                                            <Setter Property="IsEditable" Value="False"/>
                                        </Style>
                                    </DataGridComboBoxColumn.EditingElementStyle>
                                </DataGridComboBoxColumn>
                                <DataGridTextColumn Header="Remarks" MinWidth="165" Binding="{Binding Remarks, Mode=TwoWay}"/>
                            </DataGrid.Columns>
                            <DataGrid.ContextMenu>
                                <ContextMenu x:Name="TaskDataGridContextMenu" Opened="TaskDataGridContextMenu_Opened">
                                    <MenuItem x:Name="ContextDateOverride" Header="Apply Date Override" Click="ContextDateOverride_Click"/>
                                    <MenuItem x:Name="ContextOpenLocation" Header="Open File Location" Click="ContextOpenLocation_Click"/>
                                    <MenuItem x:Name="ContextViewData" Header="View Data" Click="ContextViewData_Click"/>
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                        </DataGrid>
                    </Grid>
                </GroupBox>
            </DockPanel>
            <DockPanel Grid.Row="1" Width="350" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Button x:Name="AddTaskButton" Content="Add Task" FontSize="14" Height="25" Width="150" Margin="0,0,20,0" IsEnabled="False" Click="AddTaskButton_Click"/>
                <Button x:Name="RemoveTaskButton" Content="Remove Task" FontSize="14" Height="25" Width="150" IsEnabled="False" Click="RemoveTaskButton_Click"/>
            </DockPanel>
            <StackPanel Margin="61,0,0,0" Grid.Row="1" Width="220" HorizontalAlignment="Left">
                <ComboBox x:Name="SearchOptions" Height="20" VerticalAlignment="Top" Margin="0,5,0,5" IsEditable="False" SelectionChanged="SearchOptions_SelectionChanged"/>
                <TextBox x:Name="SearchBox" Height="20" VerticalAlignment="Top" Margin="0,0,0,5" TextChanged="SearchBox_TextChanged"/>
            </StackPanel>
        </Grid>
        <!--Calendar View-->
        <Grid x:Name="CalendarViewGrid" Visibility="Collapsed" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!--Calendar, checkbox, combobox-->
            <StackPanel Grid.Column="0">
                <Viewbox MinHeight="250" MaxHeight="400">
                    <Calendar x:Name="ItemCalendar" PreviewMouseUp="ItemCalendar_PreviewMouseUp" SelectedDatesChanged="ItemCalendar_SelectedDatesChanged" Margin="5,0,0,0"/>
                </Viewbox>
                <CheckBox x:Name="MandatoryOnlyBox" Content="Show only mandatory items." Checked="MandatoryOnlyBox_Checked" Unchecked="MandatoryOnlyBox_Checked" Margin="9,0,0,0"/>
                <CheckBox x:Name="InOperationOnlyBox" Content='Show only "in operation" items.' Checked="InOperationOnlyBox_Checked" Unchecked="InOperationOnlyBox_Checked" Margin="9,0,0,0"/>
            </StackPanel>
            <!--Text boxes and tables-->
            <StackPanel Grid.Column="1" Grid.ColumnSpan="2">
                <Label x:Name="weekTodoLabel" Content="Due within...:"/>
                <DataGrid x:Name="todoTable" Height="480" VerticalAlignment="Stretch" CanUserResizeColumns="True" Width="Auto" 
                          AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" Margin="5,0,5,0">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="SN" Width="100" Binding="{Binding [SerialNumber]}"/>
                        <DataGridTextColumn Header="Model" Width="100" Binding="{Binding [Model]}"/>
                        <DataGridTextColumn Header="Task" Width="100" Binding="{Binding [TaskTitle]}"/>
                        <DataGridTextColumn Header="Description" Width="*" Binding="{Binding [Description]}"/>
                        <DataGridTextColumn Header="Location" Width="100" Binding="{Binding [Location]}"/>
                        <DataGridTextColumn Header="Vendor" Width="100" Binding="{Binding [ServiceVendor]}"/>
                        <DataGridTextColumn Header="Due By" Width="75" Binding="{Binding [DueDateString]}"/>
                        <DataGridTextColumn Header="Replacement Available" Width="75" Binding="{Binding [ReplacementAvailable]}"/>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="TableMenuGoto" Header="Go to Item" Click="TableMenuGoto_Click"/>
                            <MenuItem x:Name="TableMenuCalData" Header="Add Data" Click="TableMenuCalData_Click"/>
                            <MenuItem x:Name="ExportDueList" Header="Export List" Click="ExportDueList_Click"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </StackPanel>
        </Grid>
        <StatusBar x:Name="MainStatusBar" Grid.Row="3" Background="#f0f0f0">
            <StatusBarItem x:Name="StatusBarMainLabel" VerticalAlignment="Center" Content=""/>
            <ProgressBar x:Name="StatusProgressBar" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="100,0,0,0" Width="150" Height="20" Value="0" Visibility="Hidden"/>
        </StatusBar>
    </Grid>
</Window>
